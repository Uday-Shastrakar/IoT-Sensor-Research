{"ast":null,"code":"var _jsxFileName = \"D:\\\\IoT-Sensor-Research\\\\sensor-frontend\\\\src\\\\SensorData.js\",\n  _s = $RefreshSig$();\n// src/SensorData.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SensorData({\n  type,\n  sensorId\n}) {\n  _s();\n  const [reading, setReading] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Fetch sensor data from the Spring Boot API\n    fetch(`http://localhost:8080/sensors/${type}?sensorId=${sensorId}`).then(response => response.json()).then(data => {\n      setReading(data.reading);\n      setLoading(false);\n    });\n  }, [type, sensorId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [type, \" Sensor Data\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Sensor ID: \", sensorId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Type: \", type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Reading: \", reading]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(SensorData, \"i3MwGFRrpQIIzSrDOBjHz5bxWEQ=\");\n_c = SensorData;\nexport default SensorData;\nvar _c;\n$RefreshReg$(_c, \"SensorData\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SensorData","type","sensorId","_s","reading","setReading","loading","setLoading","fetch","then","response","json","data","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/IoT-Sensor-Research/sensor-frontend/src/SensorData.js"],"sourcesContent":["// src/SensorData.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction SensorData({ type, sensorId }) {\r\n  const [reading, setReading] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Fetch sensor data from the Spring Boot API\r\n    fetch(`http://localhost:8080/sensors/${type}?sensorId=${sensorId}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setReading(data.reading);\r\n        setLoading(false);\r\n      });\r\n\r\n\r\n      \r\n  },\r\n  \r\n  [type, sensorId]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>{type} Sensor Data</h2>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <div>\r\n          <p>Sensor ID: {sensorId}</p>\r\n          <p>Type: {type}</p>\r\n          <p>Reading: {reading}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SensorData;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,UAAUA,CAAC;EAAEC,IAAI;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACtC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACAW,KAAK,CAAE,iCAAgCP,IAAK,aAAYC,QAAS,EAAC,CAAC,CAChEO,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdP,UAAU,CAACO,IAAI,CAACR,OAAO,CAAC;MACxBG,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EAIN,CAAC,EAED,CAACN,IAAI,EAAEC,QAAQ,CAAC,CAAC;EAEjB,oBACEH,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,GAAKZ,IAAI,EAAC,cAAY;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1BX,OAAO,gBACNP,OAAA;MAAAc,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjBlB,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAAc,QAAA,GAAG,aAAW,EAACX,QAAQ;MAAA;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BlB,OAAA;QAAAc,QAAA,GAAG,QAAM,EAACZ,IAAI;MAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBlB,OAAA;QAAAc,QAAA,GAAG,WAAS,EAACT,OAAO;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACd,EAAA,CAjCQH,UAAU;AAAAkB,EAAA,GAAVlB,UAAU;AAmCnB,eAAeA,UAAU;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}